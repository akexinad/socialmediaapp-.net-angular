.NET COMMAND LINE NOTES

> dotnet -h
- Provides a list of all your commands.

> dotnet new -h
- Contextual help for all the different types of projects we can build.

> dotnet new webapi -h
- help on this particular type of app.

- Creating the app
> dotnet new webapi -o DatingApp.API -n DatingApp.API

> dotnet watch run
- Launches the kestrel web server and starts up the application.




NOTES ON LOGGING INFO.

- The appsettings.development.json file determines what gets logged to your terminal when your in development and  appsettings.json determines what is logged in other environments.




DATABASE NOTES.

- We are going to take the "Code First" approach.
    - This means that we create our class models first, that represent the objects that directly relate to tables in our database.





ENTITYFRAMEWORK NOTES:

- When you create a Model/Entity, you need to let EntityFramework know bout its existence.
- This happens in the DataContext file.

- Then your application needs to know about this DataContext.
- This happens in our Startup.cs file.

- Use the nugetpackage manager to install sqlite.
- ctrl shift P > nuget package manager: add package > Microsoft.EntityFrameworkCore.Sqlite > pick the latest version.
- It should be added to your .csproj file.




CREATING THE DATABASE:

- After you have completed the configuration settings in the appsettings.json file and the startup.cs file, run these commands:

> dotnet ef migration add InitialCreate

- It creates a migrations folder.

> dotnet ef database update

- This will update the databse with the latest migration as well as create the database if you havent done so.




EDITING CORS

- See startup.cs services and configure method where configurations is supplied.
- Once you have configured it to allow any, if you check your response headers in your network in your browser, you will see an * value for Access-Control-Allow-Origin in the 200 get request for values.